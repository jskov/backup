
# Tests

Tests are run using a test certificate (in src/test/data/gpghome) which is unprotected. This means that the tests can decrypt without providing a password.

=========
* fail on input of .tars in backup folder
* name nested archives as .btar to allow tars in backup dir
* built with signing
* check that .-file are included
* check that all sub-dirs (in depth) are included
* document that links are not included, that empty dirs are removed
* tarInfo of dir names containing "
* verify self - include signature of all checksums, verify correctness


Performance
* should performance check the double-write of nested tars
  maybe compute tar size from writing to nul-sink, then write once into the proper archive
  

  
TESTS TODO:
 o backup info added to restore script
 o pick up encryption errors for GUI presentation
 o (CLI) output on top of existing backup causes output that is not helpful (no existing file cause)
  
 Test key created:
  $ gpg --homedir src/test/data/gpghome --generate-key 
     Real name: Backup Test Key
     Email address: jskov@mada.dk
     Password: (none!)
     281DE650E39B5DCA3E9D542092B7BAA1D6B4A52D
 
 Encrypt
  $ cat file | gpg --homedir src/test/data/gpghome --compress-algo none --with-colons --cipher-algo AES256 --batch --recipient 281DE650E39B5DCA3E9D542092B7BAA1D6B4A52D --encrypt > out.crypted
  $ gpg --homedir src/test/data/gpghome --no-symkey-cache -o out -d out.crypted


Unpack nested
 $ tar xv --to-command '[[ "$TAR_FILENAME" == *.tar ]] && tar xf - || cat > $TAR_FILENAME' -f ../input.tar
