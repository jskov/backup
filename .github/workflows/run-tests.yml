# From https://help.github.com/en/articles/workflow-syntax-for-github-actions
# Find actions in
#  https://github.com/actions
#  https://github.com/features/actions

# https://github.com/marketplace/actions/setup-graalvm-environment


# Gradle check does not return error on test failures.
# This allows test report to be collected before checking for success

name: Build and run tests


# Should work with both push and schedule, as per below, but does not.
# https://github.community/t5/GitHub-Actions/Multiple-event-triggers-with-config/m-p/33258

on:
  push
#  schedule:
#      - cron: '28 11 * * *'

jobs:
  build-job:
    env:
      GRAALVM_VERSION: 19.3.0
    name: Build and test
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
#    - uses: actions/setup-java@v1
#      with:
#        java-version: '11.0.x'
#        architecture: x64


    - uses: jskov/setup-graalvm-linux@master


#    - uses: rtc11/setup-graalvm@1.0
#      with:
#        args: 'https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-19.3.0/graalvm-ce-java11-linux-amd64-19.3.0.tar.gz'
    - run: env | sort
    - run: sh -c "pwd"
    
    
#    - name: Cache graal part 1
#      id: graal-part1
#      uses: actions/cache@v1
#      with:
#        path: graal-1
#        key: graal-19.3.0aa

#    - name: Download graal
#      if: steps.graal-part1.outputs.cache-hit != 'true' && steps.graal-part2.outputs.cache-hit != 'true'
#      run: mkdir graal-1 graal-2 && curl -L https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-19.3.0/graalvm-ce-java11-linux-amd64-19.3.0.tar.gz | split -b 300M - graal && mv graalaa graal-1/ && mv graalab graal-2/
 
#    - name: Checksum graal
#      run: cat graal-1/graalaa graal-2/graalab | sha256sum

    - run: echo $GRAALVM_HOME
    - run: ls -l $GRAALVM_HOME
    - run: gu install native-image
    - run: native-image --help
    

#    - run: ./gradlew check
#    - uses: actions/upload-artifact@v1
#      with:
#        name: test-report
#        path: build/reports
#    - run: test -f build/all-tests-passed
#    - run: type gu
