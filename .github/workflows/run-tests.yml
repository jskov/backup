# From https://help.github.com/en/articles/workflow-syntax-for-github-actions
# Find actions in
#  https://github.com/actions
#  https://github.com/features/actions

# https://github.com/marketplace/actions/setup-graalvm-environment


# Gradle check does not return error on test failures.
# This allows test report to be collected before checking for success

name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, test, and release
    runs-on: ubuntu-latest
    steps:
      - name: Define BUILD_LABEL
        env:
          INPUT: ${{ github.head_ref || github.ref_name }}
        run: |
          echo "BUILD_LABEL=${INPUT//\//_}" >> $GITHUB_ENV
    
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@8d49e559aae34d3e0eb16cde532684bc9702762b
        # 1.0.6

      # From https://docs.sonarqube.org/latest/analysis/github-integration/
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set build version
        # Cannot use ${BUILD_LABEL} with gradle-build-action, so stuff version
        # into gradle.properties
        run: sed -i 's/^version.*/version = '${BUILD_LABEL}'/;' ./gradle.properties

      - name: Build release
        uses: gradle/gradle-build-action@6095a76664413da4c8c134ee32e8a8ae900f0f1f
        # 2.4.0
        with:
          # Only write to the cache for builds on the 'main' branch (default - but here for documentation)
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          arguments: build check shadow sonarqube javadoc -s
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Test Report
        # This will fail to run if caused by (dependabot) PR
        uses: dorny/test-reporter@c9b3d0e2bd2a4e96aaf424dbaa31c46b42318226
        # 1.6.0
        if: failure()    # run this step even if previous step failed
        with:
          name: Junit Tests            # Name of the check run which will be created
          path: build/test-results/**/*.xml # Path to test results
          reporter: java-junit         # Format of test results
